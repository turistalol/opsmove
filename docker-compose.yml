# docker-compose.yml
version: '3.8'

services:
  opsmove-web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: opsmove_web_app
    restart: unless-stopped
    networks:
      - web # Conecta à rede existente 'web'
    labels:
      # --- Traefik Labels ---
      - "traefik.enable=true"
      # Router para HTTPS (Domínio Principal)
      - "traefik.http.routers.opsmove-web-secure.rule=Host(`opsmove.com.br`)"
      - "traefik.http.routers.opsmove-web-secure.entrypoints=websecure" # Seu entrypoint HTTPS
      - "traefik.http.routers.opsmove-web-secure.service=opsmove-web-service"
      - "traefik.http.routers.opsmove-web-secure.tls=true"
      - "traefik.http.routers.opsmove-web-secure.tls.certresolver=myCloudflareResolver" # Seu CertResolver
      # Router para HTTPS (com www, redirecionando para sem www)
      - "traefik.http.routers.opsmove-www-secure.rule=Host(`www.opsmove.com.br`)"
      - "traefik.http.routers.opsmove-www-secure.entrypoints=websecure"
      - "traefik.http.routers.opsmove-www-secure.middlewares=redirect-to-non-www@docker"

      # Serviço (para onde Traefik envia o tráfego)
      - "traefik.http.services.opsmove-web-service.loadbalancer.server.port=3000" # Porta interna do container Next.js

      # Middleware para redirecionar www para não-www
      - "traefik.http.middlewares.redirect-to-non-www.redirectregex.regex=^https://www\\.(.*)"
      - "traefik.http.middlewares.redirect-to-non-www.redirectregex.replacement=https://$${1}"
      - "traefik.http.middlewares.redirect-to-non-www.redirectregex.permanent=true"

networks:
  web:
    external: true # Declara que a rede 'web' já existe e é gerenciada externamente 